{"name":"Checkout.shoo","tagline":"","body":"## Project-Checkout.Shoo - Complete Code Description (Process Desc. - http://dev-dipesh.github.io/Project-Checkout.Shoo/)\r\n\r\nCheckout.Shoo is a project of wordpress, which integrates Paypal, EasyPay, MailJet and GetResponse APIs. Also with some code implementation in function.php for Gravity Form for automatic form pre-population and some JSON and PHP multi array implementation. Here is the complete code descricption for all of it's important code blocks.\r\n\r\n#### Contents\r\n\r\n 0. [EasyPay | Mailjet | GetResponse | Paypal](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#easypay--mailjet--getresponse--paypal)\r\n   0. [EasyPay](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#easypay)\r\n   0. [Mailjet](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#mailjet)\r\n   0. [GetResponse](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#getresponse)\r\n     0. [Official Code for add_contact()](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#official-code-for-add_contact)\r\n     0. [A tip: add_autoresponder()](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#add_autoresponder)\r\n   0.[PayPal](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#paypal)\r\n     0. [Description of Paypal URL Parameters used here](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#description-of-paypal-url-parameters-used-here-)\r\n\r\n 0. [Gravity Form form Pre-Population code for function.php (Filename - function.php)](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#gravity-form-form-pre-population-code-for-functionphp-filename---functionphp)\r\n   0. [PHP PRODUCT FILE](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#php-product-file)\r\n\r\n 0. [File for Thank you page redirection JSON Style (Filename - product.js)](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#file-for-thank-you-page-redirection-json-style-filename---productjs)\r\n   0. [File for accessing and processing these values (filename: process.js)](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#file-for-accessing-and-processing-these-values-filename-processjs)\r\n\r\n 0. [Description of all other files](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#description-of-all-other-files)\r\n   0. [EasyPay](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#easypay-1)\r\n   0. [GetResponse](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#getresponse-1)\r\n   0. [Mailjet](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#mailjet-1)\r\n   0. [Gravity Form](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#gravity-form)\r\n   0. [Error Log](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#error-log)\r\n   0. [Thank you page processing](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/README.md#thank-you-page-processing)\r\n\r\n## EasyPay | Mailjet | GetResponse | Paypal\r\n**(File Name: EasypayCreatePaymentReferenceExample.php)**\r\n\r\n### EASYPAY\r\n**(Line 28 - 203)**\r\n\r\n```php\r\n//Including Core Configuration files of EasyPay\r\nrequire_once('api/Easypay.php');\r\n\r\n//Defininf mandatory and optional parameters\r\n$easypay_params['user'] = 'JDSM230412';\r\n$easypay_params['cin'] = '2313';\r\n$easypay_params['entity'] = '10611';\r\n$easypay_params['name'] = $first_name;\r\n$easypay_params['description'] = $item_name;\r\n$easypay_params['observation'] = $srt;\r\n$easypay_params['mobile'] = '';\r\n$easypay_params['email'] = $email;\r\n$easypay_params['value'] = $value;\r\n$easypay_params['key'] = $t_key;\r\n\r\n/*\r\n* Create a new Easypay Object\r\n* @var Easypay\r\n*/\r\n  \r\n$easypay = new Easypay($easypay_params);\r\n\r\n//set mode to either test or production.\r\n//This can be defined in the config file, here commented as already defined in config file\r\n//$easypay->set_live(false);\r\n\r\n//Creating reference object\r\n$reference = $easypay->createReference();\r\n\r\n//Fetching all relevant values using refference object\r\n$r_code = $reference['ep_reference'];\r\n$v_value = $reference['ep_value'];\r\n$link = $reference['ep_link'];\r\n$pg_mb_entidade = $reference['ep_entity'];\r\n```\r\n\r\n### Mailjet\r\n**(Line 321 - 333)**\r\n\r\n```php\r\n$headers = array ('From' => 'sim@shoo.pt', 'Subject' => 'Direct Bank Transfer');\r\n             \r\n           $smtp = Mail::factory('smtp',\r\n                          array ('host' => 'ssl://in.mailjet.com',\r\n                                 'port' => 465,\r\n                                 'auth' => true,\r\n                                 'username' => 'YOUR USERNAME KEY HERE',\r\n                                 'password' => 'YOUR PASSWORD HERE FROM YOUR ACCOUNT SETTINGS'));\r\n             \r\n          $body = \"MESSAGE TO SENT\";\r\n          $mail = $smtp->send($email, $headers, $body);\r\n          echo \"Mail\";\r\n```\r\n\r\n### GetResponse\r\n**(Line 89 - 196)**\r\n\r\n```php\r\n//GET RESPONSE EASYPAY\r\n            # Demonstrates how to add new contact to campaign.\r\n\r\n            # JSON::RPC module is required\r\n            # available at https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/jsonRPCClient.php\r\n            require_once 'jsonRPCClient.php';\r\n\r\n            # your API key is available at\r\n            # https://app.getresponse.com/my_api_key.html\r\n            $api_key = '513a258c58e1ac047aa11d310a6899bd';\r\n\r\n            # API 2.x URL\r\n            $api_url = 'http://api2.getresponse.com';\r\n\r\n            # initialize JSON-RPC client\r\n            $client = new jsonRPCClient($api_url);\r\n\r\n            # find campaign named 'pg_mb'\r\n            $campaigns = $client->get_campaigns(\r\n                $api_key,\r\n                array (\r\n                    # find by name literally\r\n                    'name' => array ( 'EQUALS' => 'pg_mb' )\r\n                )\r\n            );\r\n            \r\n            # null values will create problem in execution and parse request syntax error, which is sometimes hard\r\n            # to figure out immediately, so take an extra caution for them\r\n            if ($address2 == null) {\r\n                $address2 = \"none\";\r\n            }\r\n\r\n            # uncomment following line to preview Response\r\n            # print_r($campaigns);\r\n\r\n            # because there can be only one campaign of this name\r\n            # first key is the CAMPAIGN_ID required by next method\r\n            # (this ID is constant and should be cached for future use)\r\n            $CAMPAIGN_ID = array_pop(array_keys($campaigns));\r\n            #echo $CAMPAIGN_ID;\r\n\r\n            # add contact to the campaign\r\n            $result = $client->add_contact(\r\n                $api_key,\r\n                array (\r\n                    # identifier of 'test' campaign\r\n                    'campaign'  => $CAMPAIGN_ID,\r\n                    \r\n                    # basic info\r\n                    'name'      => $first_name,\r\n                    'email'     => $email,\r\n                    'cycle_day' => '0', // This is important as it's not even mentioned in official code below,\r\n\r\n                    # custom fields\r\n                    'customs' => array(\r\n                        array(\r\n                            'name'       => 'pg_mb_entidade',\r\n                            'content'    => $pg_mb_entidade\r\n                        ),\r\n                        array(\r\n                            'name'       => 'pg_mb_referencia',\r\n                            'content'    => $pg_mb_referencia\r\n                        ),\r\n                        array(\r\n                            'name'       => 'pg_quantia',\r\n                            'content'    => $v_value\r\n                        ),\r\n                        array(\r\n                            'name'       => 'pg_product_id',\r\n                            'content'    => $item_name\r\n                        ),\r\n                        array(\r\n                            'name'       => 'pg_modalidade',\r\n                            'content'    => $srt\r\n                        ),\r\n                        array(\r\n                            'name'       => 'Apelido',\r\n                            'content'    => $last_name\r\n                        ),\r\n                        array(\r\n                            'name'       => 'Phone',\r\n                            'content'    => $phone\r\n                        ),\r\n                        array(\r\n                            'name'       => 'Address',\r\n                            'content'    => $address1\r\n                        ),\r\n                        array(\r\n                            'name'       => 'Moradalinha2',\r\n                            'content'    => $address2\r\n                        ),\r\n                        array(\r\n                            'name'       => 'City',\r\n                            'content'    => $city\r\n                        ),\r\n                        array(\r\n                            'name'       => 'State',\r\n                            'content'    => $state\r\n                        ),\r\n                        array(\r\n                            'name'       => 'ZipPostal',\r\n                            'content'    => $zip\r\n                        ),\r\n                        array(\r\n                            'name'       => 'Country',\r\n                            'content'    => $country\r\n                        )\r\n                    )\r\n                )\r\n            );\r\n```\r\n\r\n#### Official Code for add_contact()\r\n\r\n`'cycle_day' => '0'` is important to remember as when you call getresponse from it's API it won't add your campaign directly to autoresponder cycle, so you have to do it yourself. Here is the official code for adding contacts.\r\n\r\n```json\r\n[ \r\n        \"API_KEY\", \r\n        { \r\n            \"campaign\"  : \"CAMPAIGN_ID\", \r\n            \"name\"      : \"name_value\", \r\n            \"email\"     : \"email_value\", \r\n            \"cycle_day\" : cycle_day_value, \r\n            \"ip\"        : \"ip_value\", \r\n            \"customs\"   : [ \r\n                { \r\n                    \"name\"      : \"name_1_value\", \r\n                    \"content\"   : \r\n\"content_1_value\" \r\n                }, \r\n                { \r\n                    \"name\"      : \"name_2_value\", \r\n                    \"content\"   : \r\n\"content_2_value\" \r\n                } \r\n            ] \r\n       \r\n```\r\n\r\nA tip, if you want to create your autoresponder cycle first using API, then here is it's official code and code in PHP.\r\n\r\n#### add_autoresponder()\r\n\r\n```json\r\n[\r\n        \"API_KEY\",\r\n        {\r\n            \"campaign\"          : \"CAMPAIGN_ID\",\r\n            \"from_field\"        : \"FROM_FIELD_ID\",\r\n            \"reply_to_field\"    : \"FROM_FIELD_ID\",\r\n            \"subject\"   : \"My autoresponder\",\r\n            \"name\"      : \"Say hi\",\r\n            \"contents\"  : {\r\n                \"plain\" : \"Hello there\",\r\n                \"html\"  : \"<h1>Hello</h1>there\"\r\n            },\r\n            \"attachments\" : [\r\n                {\r\n                \"data\" : \"WmHFvMOzxYLEhyBnxJnFm2zEhSBqYcW6xYQu==\",\r\n                \"name\" : \"order.txt\",\r\n                \"mime\" : \"application/txt\"\r\n                },\r\n                {\r\n                \"data\" : \"QWxhLGtvdA==\",\r\n                \"name\" : \"people.csv\",\r\n                \"mime\" : \"application/csv\"\r\n                },\r\n            ],\r\n            \"flags\" : [ \"clicktrack\", \"openrate\" ],\r\n            \"day_of_cycle\" : 32\r\n        }\r\n    ]\r\n```\r\n\r\n```php\r\n$result = $client->add_autoresponder(\r\n    $api_key,\r\n    array (\r\n        # identifier of 'test' campaign\r\n        'campaign'  => $CAMPAIGN_ID,\r\n                    \r\n        # mail details\r\n        'subject'      => \"My autoresponder\",\r\n        'name'     => \"Say hi\",\r\n\r\n        # custom fields\r\n        \"contents\"  => array(\r\n                \"plain\" => \"Hello there\",\r\n                \"html\"  => \"<h1>Hello</h1>there\"\r\n            ),\r\n            \"flags\" => [ \"openrate\" ],\r\n            \"day_of_cycle\" => 1\r\n    )\r\n);\r\n```\r\n\r\n### PayPal\r\n**(Line 30 - 363)**\r\n\r\nFirst of all as this is a subscription form, so here I've defined the the code for srt parameter of paypal, below is details of all of the used parameters of paypal.\r\n```php\r\n// Code for multiple subscription\r\n            if ($m2 != $value) {\r\n                $srt = $m1;\r\n                $srt= preg_replace(\"/[x]/i\", \"\", $srt); // To replace 'x' from 1x 2x 3x....nx\r\n            }\r\n            else {\r\n                $srt = 1;\r\n            }\r\n```\r\n\r\nCode for paypal URL, here check the PHP function `urlencode()` we can not pass another url with parameters in base url as parameter, as then both urls prameters will conflict, that's why we have passed and encoded url to the paypal.\r\n```php\r\nif ($srt != 1) {\r\n                header(\"Location: https://www.paypal.com/cgi-bin/webscr/?notify_url=https://checkout.shoo.pt/?page=gf_paypal_ipn&charset=UTF-8&currency_code=EUR&business=jd@joaodiogomarques.com&first_name=$first_name&last_name=$last_name&email=$email&address1=$address1&address2=$address2&city=$city&state=$state&zip=$zip&country=$country&cbt=Click here to continue&cancel_return=\".urlencode($c_return).\"&no_note=1&no_shipping=1&return=\".urlencode($process_url).\"&cmd=_xclick-subscriptions&item_name=CO shoo:$item_name&a3=$value&p3=1&t3=M&src=1&srt=$srt&sra=1\");\r\n                exit;\r\n            }\r\n            else {\r\n                header(\"Location: https://www.paypal.com/cgi-bin/webscr/?notify_url=https://checkout.shoo.pt/?page=gf_paypal_ipn&charset=UTF-8&currency_code=EUR&business=jd@joaodiogomarques.com&first_name=$first_name&last_name=$last_name&email=$email&address1=$address1&address2=$address2&city=$city&state=$state&zip=$zip&country=$country&cbt=Click here to continue&cancel_return=\".urlencode($c_return).\"&no_note=1&no_shipping=1&return=\".urlencode($process_url).\"&cmd=_xclick-subscriptions&item_name=CO shoo:$item_name&a3=$value&p3=1&t3=M&sra=1\");\r\n                exit;\r\n            }\r\n```\r\n\r\n#### Description of Paypal URL Parameters used here ()\r\n\r\n(For complete description visit -  https://developer.paypal.com/docs/classic/paypal-payments-standard/integration-guide/Appx_websitestandard_htmlvariables/)\r\n\r\n  0. **notify_url=** The URL to which PayPal posts information about the payment, in the form of Instant Payment Notification messages.\r\n  0. **charset=** Sets the character set and character encoding for the billing information/log-in page on the PayPal website. In addition, this variable sets the same values for information that you send to PayPal in your HTML button code. The default is based on the language encoding settings in your Account Profile.\r\n  0. **currency_code=** The currency of the payment. The default is USD. \r\n  0. **business=** Your PayPal ID or an email address associated with your PayPal account. Email addresses must be confirmed.\r\n  0. **first_name=** First name\r\n  0. **last_name=** Last Name\r\n  0. **email=** Email\r\n  0. **address1=** Address Line 1\r\n  0. **address2=** Address Line 2\r\n  0. **city=** City\r\n  0. **state=** State\r\n  0. **zip=** Zip\r\n  0. **country=** Country\r\n  0. **cbt=** Sets the text for the Return to Merchant button on the PayPal Payment Complete page. For Business accounts, the return button displays your business name in place of the word \"Merchant\" by default. Currently set 'Click here to continue'\r\n  0. **cancel_return=** A URL to which PayPal redirects the buyers' browsers if they cancel checkout before completing their payments. For example, specify a URL on your website that displays a \"Payment Canceled\" page.\r\nDefault – PayPal redirects the browser to a PayPal webpage.\r\n  0. **no_note=** Do not prompt buyers to include a note with their payments. Allowable values for Subscribe buttons:\r\n    0. – hide the text box and the prompt\r\n  0. **no_shipping=** Do not prompt buyers for a shipping address. Allowable values are: \r\n    0. – prompt for an address, but do not require one\r\n    0. – do not prompt for an address\r\n    0. – prompt for an address, and require one\r\n    The default is 0.\r\n  0. **return=** The URL to which PayPal redirects buyers' browser after they complete their payments. For example, specify a URL on your site that displays a \"Thank you for your payment\" page. \r\nDefault – PayPal redirects the browser to a PayPal webpage.\r\n  0. **cmd=** Paypal button codes\r\n  0. **item_name=** Here the name of the item is defined\r\n  0. **a3=** Regular subscription price.\r\n  0. **p3=** Subscription duration. Specify an integer value in the allowable range for the units of duration that you specify with t3.\r\n  0. **t3=** Regular subscription units of duration.\r\n    Allowable values are:\r\n    0. D – for days; allowable range for p3 is 1 to 90\r\n    0. W – for weeks; allowable range for p3 is 1 to 52\r\n    0. M – for months; allowable range for p3 is 1 to 24\r\n    0. Y – for years; allowable range for p3 is 1 to 5\r\n  0. **src=** Recurring payments. Subscription payments recur unless subscribers cancel their subscriptions before the end of the current billing cycle or you limit the number of times that payments recur with the value that you specify for srt.\r\n    Allowable values are:\r\n    0. 0 – subscription payments do not recur\r\n    0. 1 – subscription payments recur\r\n    The default is 0.\r\n  0. **srt=** Recurring times. Number of times that subscription payments recur. Specify an integer with a minimum value of 2 and a maximum value of 52. Valid only if you specify src=\"1\".\r\n  0. **sra=** Reattempt on failure. If a recurring payment fails, PayPal attempts to collect the payment two more times before cancelling the subscription.\r\n    Allowable values are:\r\n    0. 0 – do not reattempt failed recurring payments\r\n    0. 1 – reattempt failed recurring payments before cancelling\r\n    The default is 1.\r\n\r\n## Gravity Form form Pre-Population code for function.php (Filename - function.php)\r\n**(Line 19 - 99)**\r\n\r\n```php\r\n//For Radio box field\r\n//NOTE: update the '4' to the ID of your form\r\nadd_filter('gform_pre_render_4', 'payment');\r\nadd_filter(\"gform_pre_submission_filter_4\", \"payment\");\r\n\r\nfunction payment($form){\r\n    foreach($form['fields'] as &$field){\r\n\r\n        //NOTE: replace 19 with your radio box field id\r\n        $field_id = 19;\r\n\r\n        if($field['id'] != $field_id)\r\n            continue;\r\n  //Including radio_products file for multi-dimensional array of products\r\n\trequire('radio_products.php');        \r\n\r\n  //Fetching current product name from the url\r\n\t$product = trim($_REQUEST['pname']);\r\n\r\n  //Finding the index of array for current product from the above included file\r\n\tfor($i = 0;$i <= count($products); $i++) {\r\n\t\t$index = $i-1;\r\n\t\tif($product == $products[$index]['pname']){\r\n\t\t\t$arr_index = $index;\r\n\t\t}\r\n\t}\r\n\r\n\t$i = $arr_index;\r\n\t$select = true;\r\n\r\n  //To enable price in gravity form field so as to calculate cost\r\n\t$field['enablePrice'] = 1;\r\n\r\n  //For single product mode, i.e. 1x\r\n\tif (!empty($products[$i]['value'])) {\r\n\t\t$choices[0] = array('text' => $products[$i]['text'], 'value' => $products[$i]['value'], 'price' => $products[$i]['price'], 'isSelected' => $select);\r\n\t}\r\n\r\n  //Any mode other than >1x (2x 3x .... nx ... (n+1)x)\r\n\telse{\r\n        $choices[0] = array('text' => $products[$i]['text1'], 'value' => $products[$i]['value1'], 'price' => $products[$i]['price1']);\t\r\n        $choices[1] = array('text' => $products[$i]['text2'], 'value' => $products[$i]['value1'], 'price' => $products[$i]['price2'], 'isSelected' => $select);\r\n    }\r\n        //Pushing array value in the choices\r\n        $field['choices'] = $choices;\r\n    }\r\n    return $form;\r\n}\r\n\r\n// For Checkbox field\r\nadd_filter('gform_pre_render_4', 'checkbox');\r\nadd_filter(\"gform_pre_submission_filter_4\", \"checkbox\");\r\n\r\nfunction checkbox($form){\r\n    foreach($form['fields'] as &$field){\r\n\r\n        //NOTE: replace 30 with your radio box field id\r\n        $field_id = 30;\r\n\r\n        if($field['id'] != $field_id)\r\n            continue;\r\n\r\n\trequire('radio_products.php');\r\n\r\n\t$product = trim($_REQUEST['pname']);\r\n\r\n\tfor($i = 0;$i <= count($products); $i++) {\r\n\t\t$index = $i-1;\r\n\t\tif($product == $products[$index]['pname']){\r\n\t\t\t$arr_index = $index;\r\n\t\t}\r\n\t}\r\n\r\n\t$i = $arr_index;\r\n\t$select = true;\r\n\tif (!empty($products[$i]['value'])) {\r\n\t\t$choices[1] = array('text' => $products[$i]['value'], 'value' => $products[$i]['value']);\r\n\t\t$choices[2] = array('text' => $products[$i]['price'], 'value' => $products[$i]['price']);\r\n\t}\r\n\r\n\telse{\r\n\t\t$choices[1] = array('text' => $products[$i]['value1'], 'value' => $products[$i]['value1'], 'isSelected' => $select);\r\n\t\t$choices[2] = array('text' => $products[$i]['price2'], 'value' => $products[$i]['price2'], 'isSelected' => $select);\r\n\t}\r\n\r\n        $field['choices'] = $choices;\r\n    }\r\n    return $form;\r\n}\r\n```\r\nNotice here at `isSelected => $select` , this will select the default value you want to select automatically. \r\n\r\n### PHP PRODUCT FILE\r\n**(Filename - radio_products.php)**\r\n\r\n```php\r\n<?php\r\n$products = array( \r\n\t\t\t\tarray( \r\n\t\t\t\t\t'pname'  => \"impulso\", \r\n          'text1'  => '3 Payments of each 97,00 &euro;. Just 1 Payment Today, 1 Payment in 30 Days, and 1 Payment In 60 Days',\r\n          'text2'  => 'DISCOUNT: One Payment of 247,00 &euro;, Pay in full today and save 44,00 &euro; instantly!',\r\n          'value1' => '3x',\r\n          'value2' => '1x',\r\n          'price1' => 97,\r\n          'price2' => 247\r\n        ),\r\n        array( \r\n          'pname'  => \"academia\", \r\n          'text1'  => 'Academia 6',\r\n          'text2'  => 'Academia 1',\r\n          'value1' => '6x',\r\n          'value2' => '1x',\r\n          'price1' => 97,\r\n          'price2' => 247\r\n        ),\r\n        array(\r\n          'pname'  => 'sample',\r\n          'text'   => 'This is a sample test product for 1xThis is a sample test product for 1xThis is a sample test product for 1x',\r\n          'value'  => '1x',\r\n          'price'  => 24\r\n        )\r\n);\r\n?>\r\n```\r\n\r\n## File for Thank you page redirection JSON Style (Filename - product.js)\r\n\r\n```js\r\nvar impulso = {\r\n    \"p_name\" : \"impulso\",\r\n    \"easypay\": {\r\n        \"t_url\":\"https://checkout.shoo.pt/impulso/mb-confirmacao/\"\r\n    },\r\n    \"paypal\": {\r\n        \"t_url\":\"https://checkout.shoo.pt/impulso/cc-confirmacao/\"\r\n    },\r\n    \"dbt\": {\r\n        \"t_url\":\"https://checkout.shoo.pt/impulso/transferencia-confirmacao/\"\r\n    }\r\n};\r\n\r\nvar academia = {\r\n    \"p_name\" : \"academia\",\r\n    \"easypay\": {\r\n        \"t_url\":\"https://checkout.shoo.pt/payment-gateway/\"\r\n    },\r\n    \"paypal\": {\r\n        \"t_url\":\"https://checkout.shoo.pt/payment-gateway/\"\r\n    },\r\n    \"dbt\": {\r\n        \"t_url\":\"https://checkout.shoo.pt/payment-gateway/\"\r\n    }\r\n};\r\n```\r\n\r\n### File for accessing and processing these values (filename: process.js)\r\n\r\n```js\r\n//Function to fectch URL parameters\r\nfunction getURLParameter(name) {\r\n  return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search)||[,\"\"])[1].replace(/\\+/g, '%20'))||null\r\n}\r\n\r\nvar item_name = getURLParameter('item_name');\r\nvar mode = getURLParameter('mode');\r\nvar modex = getURLParameter('modex');\r\nvar value = getURLParameter('value');\r\nvar fname = getURLParameter('fname');\r\nvar lname = getURLParameter('lname');\r\nvar e_reff = getURLParameter('e_reff');\r\nvar email = getURLParameter('email');\r\nvar ep_entity = getURLParameter('ep_entity');\r\n\r\nvar product = item_name+\".p_name\";\r\n\r\n//Evaluating string as an object\r\nif (item_name == eval(product)) {\r\n\tvar url = item_name+\".\"+mode+\".t_url\";\r\n\tif (mode == \"easypay\") {\r\n\t\tvar r_url = eval(url)+\"?fname=\"+fname+\"&e_reff=\"+e_reff+\"&ep_entity=\"+ep_entity+\"&modex=\"+modex+\"&value=\"+value+\"&email=\"+email;\r\n\t\t//redirecting the window to new url\r\n\t\twindow.location = \"\"+r_url+\"\";\r\n\t}\r\n\telse {\r\n\t\tvar r_url = eval(url)+\"?fname=\"+fname+\"&modex=\"+modex+\"&value=\"+value+\"&email=\"+email;\r\n\t\t//redirecting the window to new url\r\n\t\twindow.location = \"\"+r_url+\"\";\r\n\t}\r\n}\r\n```\r\n\r\n## Description of all other files\r\n\r\n#### EasyPay\r\n\r\n 0. [EasypayCreatePaymentReferenceExample.php](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/EasypayCreatePaymentReferenceExample.php)\r\n 0. [EasypayPaymentNotificationExample.php](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/EasypayPaymentNotificationExample.php)\r\n 0. [EasypayRequestPaymentExample.php](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/EasypayRequestPaymentExample.php)\r\n 0. [EasypayTransactionVerificationExample.php](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/EasypayTransactionVerificationExample.php)\r\n 0. API\r\n    0. [Easypay.php](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/api/Easypay.php)\r\n    0. [Easypay-config.php](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/api/Easypay-config.php)\r\n\r\n#### GetResponse\r\n\r\n 0. [jsonRPCClient.php](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/jsonRPCClient.php)\r\n\r\n#### Mailjet\r\n\r\n 0. [mailjet_mail.php](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/mailjet_mail.php)\r\n\r\n#### Gravity Form\r\n\r\n 0. [function.php](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/wp-content/themes/optimizePressTheme/functions.php)\r\n 0. [radio_products.php](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/wp-content/themes/optimizePressTheme/radio_products.php)\r\n 0. [formsmain.css](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/wp-content/plugins/gravityforms/css/formsmain.css)\r\n\r\n#### Error Log\r\n\r\n 0. [error_log](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/error_log)\r\n\r\n#### Thank you page processing\r\n\r\n 0. [process.html](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/process.html)\r\n 0. [process.js](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/process.js)\r\n 0. [product.js](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/product.js)\r\n 0. [spiffygif.gif](https://github.com/Dev-Dipesh/Project-Checkout.Shoo/blob/master/php_easypay/spiffygif.gif)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}